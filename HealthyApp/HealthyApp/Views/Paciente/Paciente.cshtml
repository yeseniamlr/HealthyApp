@model HealthyApp.ViewModel.ProgresoCommon
@{
    ViewBag.Title = "Paciente";
}

<h2>Paciente</h2>

<p>
    @Model.Foto_paciente<br />
    


</p>
<button onclick="location.href='@Url.Action("CitasPaciente","Citas",new {loginID=Model.LoginID })'">Citas</button>
<hr />
@using (Html.BeginForm("EditarPaciente", "Paciente", FormMethod.Post))
{
    <fieldset>

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @if (ViewBag.Message != null)
        {
            <div style="border:1px solid red">
                @ViewBag.Message

            </div>
        }
        <div>
            @Html.LabelFor(p => Model.Nombre)
            @Html.TextBoxFor(p => Model.Nombre, new { @class = "form-control" })
        </div>
        <div>
            @Html.LabelFor(p => Model.Apellido)
            @Html.TextBoxFor(p => Model.Apellido, new { @class = "form-control" })
        </div>
        <div>
            @Html.LabelFor(p => Model.Edad)
            @Html.TextBoxFor(p => Model.Edad, new { @class = "form-control" })
        </div>
        <div>
            @Html.LabelFor(p => Model.Genero)
            @Html.TextBoxFor(p => Model.Genero, new { @class = "form-control" })
        </div>
        <div>
            @Html.LabelFor(p => Model.Usuario)
            @Html.TextBoxFor(p => Model.Usuario, new { @class = "form-control" })
        </div>
        <div>
            @Html.LabelFor(p => Model.Contrasena)
            @Html.TextBoxFor(p => Model.Contrasena, new { @class = "form-control" })
        </div>
        @Html.HiddenFor(m => Model.IDPaciente)
        @Html.HiddenFor(p=>Model.LoginID)

        <button type="submit">Editar</button>
    </fieldset>
}
<hr />
@using (Html.BeginForm("Paciente", "Paciente", FormMethod.Post))
{
<fieldset>

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @if (ViewBag.Message != null)
    {
        <div style="border:1px solid red">
            @ViewBag.Message

        </div>
    }
    <div>
        @Html.LabelFor(p => p.progresoCreate.Estatura)
        @Html.TextBoxFor(p => p.progresoCreate.Estatura, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.progresoCreate.Estatura, "", new { @class = "text-danger" })
    </div>

    <div>
        @Html.LabelFor(p => p.progresoCreate.Peso)
        @Html.TextBoxFor(p => p.progresoCreate.Peso, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.progresoCreate.Peso, "", new { @class = "text-danger" })
    </div>

    <div>
        @Html.LabelFor(p => p.progresoCreate.Medida_Cadera)
        @Html.TextBoxFor(p => p.progresoCreate.Medida_Cadera, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.progresoCreate.Medida_Cadera, "", new { @class = "text-danger" })
    </div>
    <div>
        @Html.LabelFor(p => p.progresoCreate.Medida_Cintura)
        @Html.TextBoxFor(p => p.progresoCreate.Medida_Cintura, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.progresoCreate.Medida_Cintura, "", new { @class = "text-danger" })
    </div>
    <div>
        @Html.LabelFor(p => p.progresoCreate.Edad_Metabolica)
        @Html.TextBoxFor(p => p.progresoCreate.Edad_Metabolica, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.progresoCreate.Edad_Metabolica, "", new { @class = "text-danger" })
    </div>
    @Html.HiddenFor(m => Model.IDPaciente)

    @Html.HiddenFor(p => Model.LoginID)
    <button type="submit">Agregar</button>
</fieldset>
}
<hr />
<table class="table table-striped">
    <thead>
        <tr>

            <th>Fecha</th>
            <th>Peso</th>
            <th>Estatura</th>
            <th>IMC</th>
            <th>Medida de Cintura</th>
            <th>Medida de Cadera</th>
            <th>Edad Metabolica</th>

        </tr>

    </thead>

    <tbody>

        @foreach (var progreso in Model.progresoResult.progresos)

        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => progreso.Fecha)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => progreso.Peso)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => progreso.Estatura)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => progreso.IMC)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => progreso.Medida_Cintura)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => progreso.Medida_Cadera)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => progreso.Edad_Metabolica)
                </td>
            </tr>
        }



    </tbody>

</table>
<hr /><button type="button" onclick="location.href='@Url.Action("Menu","Menu",new{id=Model.LoginID}) '">Menu Semanal</button>
<hr />
<center>
    <button type="button" onclick="location.href='@Url.Action("Usuarios","HomePage")'">
        Regresar

    </button>

    <button type="button" onclick="location.href='@Html.Raw(Url.Action("Eliminar","Paciente", 
                                                 new {PerfilID=Model.IDPaciente,LoginID=Model.LoginID}))'">
        Eliminar

    </button>
</center>






